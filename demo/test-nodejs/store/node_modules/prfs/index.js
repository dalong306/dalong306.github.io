/*
* 公共头调用及缓存模块
* 缓存依赖于cache模块
* */
module.exports = function (app, callback) {

	// PRFS 域名
	var imageDomain = {
		'prd': 'http://image.suning.cn',
		'pre': 'http://preimage.suning.cn',
		'sit': 'http://sit1image.suning.cn',
		'dev': 'http://sit1image.suning.cn'
	};

	var cache = require('cache');
	var f = require("node-fetch-url");
	var EventProxy = require('eventproxy');
	var ep = new EventProxy();
	var env = app.get('env'), prfsDomain = imageDomain[env];

	// prfs
	var cache_prfs_resources = cache.get('cache_prfs_resources');
	var cache_prfs_header = cache.get('cache_prfs_header');
	var cache_prfs_footer = cache.get('cache_prfs_footer');

	if (!cache_prfs_resources || !cache_prfs_header) {
		// resources.shtml
		f.request({
			"url": prfsDomain + "/include/resources.shtml"
		}, function (err, data) {
			var html = data.body;
			ep.emit("prfs_resources", html);
			cache.set('cache_prfs_resources', html, 3600);
		});
		// header.shtml
		f.request({
			"url": prfsDomain + "/include/header.shtml"
		}, function (err, data) {
			var html = data.body;
			ep.emit("prfs_header", html);
			cache.set('cache_prfs_header', html, 3600);
		});
		// footer.shtml
		f.request({
			"url": prfsDomain + "/include/footer.shtml"
		}, function (err, data) {
			var html = data.body;
			ep.emit("prfs_footer", html);
			cache.set('cache_prfs_footer', html, 3600);
		});
		ep.all("prfs_resources", "prfs_header", "prfs_footer", function (data1, data2, data3) {
			callback ? callback({
				prfs_resources: data1,
				prfs_header: data2,
				prfs_footer: data3
			}) : null;
		});
	} else {
		callback ? callback({
			prfs_resources: cache_prfs_resources,
			prfs_header: cache_prfs_header,
			prfs_footer: cache_prfs_footer
		}) : null;
	}

}