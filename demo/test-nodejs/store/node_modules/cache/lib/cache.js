var cacheStoreKey = '_fex_cacheStore',
	cacheStore = {
		expires: {},
		data: {},
		timer: null
	};

// 存储对象初始化
var cacheInit = function () {
	if (!global[cacheStoreKey]) {
		global[cacheStoreKey] = cacheStore;
	}
};

// 每隔一定时间去删除过期的元素
(function () {
	cacheInit();
	if (!global[cacheStoreKey]['timer']) {
		global[cacheStoreKey]['timer'] = setInterval(function () {
			var timestamp = Math.round(new Date().getTime() / 1000);
			if (global[cacheStoreKey]['expires'][timestamp] != null) {
				try {
					var arr = global[cacheStoreKey]['expires'][timestamp];
					for (var i = 0; i < arr.length; i++) {
						var key = arr[i];
						global[cacheStoreKey]['data'][key] = null;
						delete global[cacheStoreKey]['data'][key];
					}
				} catch (e) {
					//
				}
			}
		}, 1000);
	}
})();

exports.set = function (key, value, expires) {
	cacheInit();
	var timestamp = Math.round(new Date().getTime() / 1000);
	expires = typeof expires != 'number' ? null : timestamp + expires;
	var data = {
		value: value,
		expires: expires
	};
	global[cacheStoreKey]['data'][key] = data;

	if (expires != null) {
		if (global[cacheStoreKey]['expires'][expires] == null) {
			global[cacheStoreKey]['expires'][expires] = [];
		}
		global[cacheStoreKey]['expires'][expires].push(key);
	}
};

exports.get = function (key) {
	cacheInit();
	if (!global[cacheStoreKey]['data'][key]) {
		return null;
	} else {
		return global[cacheStoreKey]['data'][key].value;
	}
};

exports.delete = function (key) {
	cacheInit();
	if (!global[cacheStoreKey]['data'][key]) {
		return false;
	} else {
		global[cacheStoreKey]['data'][key] = null;
		delete global[cacheStoreKey]['data'][key];
		return true;
	}
};

exports.clear = function (key) {
	cacheInit();
	global[cacheStoreKey]['data'] = {};
	global[cacheStoreKey]['expires'] = {};
	global[cacheStoreKey]['timer'] = null;
	return true;
};

exports.list = function () {
	cacheInit();
	return global[cacheStoreKey]['data'];
};

